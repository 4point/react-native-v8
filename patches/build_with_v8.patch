--- a/ReactAndroid/build.gradle
+++ b/ReactAndroid/build.gradle
@@ -170,6 +170,24 @@ task prepareJSC {
         }
     }
 }
+
+task prepareV8 {
+    doLast {
+        def v8PackageRoot = file("$projectDir/../../node_modules/v8-android/dist")
+        def v8AAR = fileTree(v8PackageRoot).matching({ it.include "**/v8-android/**/*.aar" }).singleFile
+        def soFiles = zipTree(v8AAR).matching({ it.include "**/*.so" })
+        def headerFiles = fileTree(v8PackageRoot).matching({ it.include "**/include/**" })
+
+        copy {
+            from(soFiles)
+            from(headerFiles)
+            from("src/main/jni/third-party/v8/Android.mk")
+            includeEmptyDirs(false)
+            into("$thirdPartyNdkDir/v8")
+        }
+    }
+}
+
 task downloadNdkBuildDependencies {
     if (!boostPath) {
         dependsOn(downloadBoost)
@@ -240,7 +258,7 @@ def getNdkBuildFullPath() {
     return ndkBuildFullPath
 }

-task buildReactNdkLib(dependsOn: [prepareJSC, prepareHermes, prepareBoost, prepareDoubleConversion, prepareFolly, prepareGlog], type: Exec) {
+task buildReactNdkLib(dependsOn: [prepareV8, prepareHermes, prepareBoost, prepareDoubleConversion, prepareFolly, prepareGlog], type: Exec) {
     inputs.dir("$projectDir/../ReactCommon")
     inputs.dir("src/main/jni")
     outputs.dir("$buildDir/react-ndk/all")
@@ -277,6 +295,7 @@ task packageReactNdkLibs(dependsOn: buildReactNdkLib, type: Copy) {
     into("$buildDir/react-ndk/exported")
     exclude("**/libjsc.so")
     exclude("**/libhermes.so")
+    exclude("**/libv8.so")
 }

 task packageReactNdkLibsForBuck(dependsOn: packageReactNdkLibs, type: Copy) {
--- a/ReactAndroid/src/main/java/com/facebook/react/jscexecutor/Android.mk
+++ b/ReactAndroid/src/main/java/com/facebook/react/jscexecutor/Android.mk
@@ -15,7 +15,7 @@ LOCAL_C_INCLUDES := $(LOCAL_PATH)

 LOCAL_CFLAGS += -fvisibility=hidden -fexceptions -frtti

-LOCAL_STATIC_LIBRARIES := libjsi libjsireact jscruntime
+LOCAL_STATIC_LIBRARIES := libjsi libjsireact v8runtime
 LOCAL_SHARED_LIBRARIES := libfolly_json libfb libreactnativejni

 include $(BUILD_SHARED_LIBRARY)
diff --git a/ReactAndroid/src/main/java/com/facebook/react/jscexecutor/OnLoad.cpp b/ReactAndroid/src/main/java/com/facebook/react/jscexecutor/OnLoad.cpp
index ebf4d22683..9cabd4518f 100644
--- a/ReactAndroid/src/main/java/com/facebook/react/jscexecutor/OnLoad.cpp
+++ b/ReactAndroid/src/main/java/com/facebook/react/jscexecutor/OnLoad.cpp
@@ -5,7 +5,7 @@

 #include <fb/fbjni.h>
 #include <folly/Memory.h>
-#include <jsi/JSCRuntime.h>
+#include <jsi/v8runtime/V8RuntimeFactory.h>
 #include <jsireact/JSIExecutor.h>
 #include <react/jni/JReactMarker.h>
 #include <react/jni/JSLogging.h>
@@ -29,7 +29,7 @@ class JSCExecutorFactory : public JSExecutorFactory {
       react::bindNativeLogger(runtime, androidLogger);
     };
     return folly::make_unique<JSIExecutor>(
-        jsc::makeJSCRuntime(),
+        createV8Runtime(),
         delegate,
         JSIExecutor::defaultTimeoutInvoker,
         installBindings);
--- a/ReactAndroid/src/main/jni/react/jni/Android.mk
+++ b/ReactAndroid/src/main/jni/react/jni/Android.mk
@@ -53,7 +53,8 @@ include $(BUILD_SHARED_LIBRARY)
 $(call import-module,folly)
 $(call import-module,fb)
-$(call import-module,jsc)
+$(call import-add-path, $(REACT_COMMON_DIR)/jsi)
+$(call import-module,v8runtime)
 $(call import-module,fbgloginit)
 $(call import-module,yogajni)
 $(call import-module,cxxreact)
--- /dev/null
+++ b/ReactAndroid/src/main/jni/third-party/v8/Android.mk
@@ -0,0 +1,6 @@
+LOCAL_PATH:= $(call my-dir)
+include $(CLEAR_VARS)
+LOCAL_MODULE:= v8
+LOCAL_SRC_FILES := jni/$(TARGET_ARCH_ABI)/libv8.so
+LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)/include
+include $(PREBUILT_SHARED_LIBRARY)
--- a/ReactCommon/cxxreact/Android.mk
+++ b/ReactCommon/cxxreact/Android.mk
@@ -26,7 +26,7 @@ include $(BUILD_STATIC_LIBRARY)

 $(call import-module,fb)
 $(call import-module,folly)
-$(call import-module,jsc)
+$(call import-module,v8)
 $(call import-module,glog)
 $(call import-module,jsi)
 $(call import-module,jsinspector)
